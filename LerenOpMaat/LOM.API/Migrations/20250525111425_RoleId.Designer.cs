// <auto-generated />
using System;
using LOM.API.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LOM.API.Migrations
{
    [DbContext(typeof(LOMContext))]
    [Migration("20250525111425_RoleId")]
    partial class RoleId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LOM.API.Models.Cohort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Cohorts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            StartDate = new DateTime(2025, 5, 25, 13, 14, 24, 868, DateTimeKind.Local).AddTicks(6529)
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            StartDate = new DateTime(2026, 5, 25, 13, 14, 24, 868, DateTimeKind.Local).AddTicks(6575)
                        },
                        new
                        {
                            Id = 3,
                            IsActive = false,
                            StartDate = new DateTime(2027, 5, 25, 13, 14, 24, 868, DateTimeKind.Local).AddTicks(6579)
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            StartDate = new DateTime(2024, 5, 25, 13, 14, 24, 868, DateTimeKind.Local).AddTicks(6580)
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            StartDate = new DateTime(2023, 5, 25, 13, 14, 24, 868, DateTimeKind.Local).AddTicks(6582)
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            StartDate = new DateTime(2022, 5, 25, 13, 14, 24, 868, DateTimeKind.Local).AddTicks(6583)
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            StartDate = new DateTime(2021, 5, 25, 13, 14, 24, 868, DateTimeKind.Local).AddTicks(6585)
                        });
                });

            modelBuilder.Entity("LOM.API.Models.CompletedEvl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ModuleEvlId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleProgressId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModuleEvlId");

                    b.HasIndex("ModuleProgressId");

                    b.ToTable("CompletedEvls");
                });

            modelBuilder.Entity("LOM.API.Models.Conversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LearningRouteId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LearningRouteId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Conversations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LearningRouteId = 1,
                            StudentId = 1,
                            TeacherId = 3
                        });
                });

            modelBuilder.Entity("LOM.API.Models.GraduateProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("GraduateProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorCode = "#F16682",
                            Name = "BIM"
                        },
                        new
                        {
                            Id = 2,
                            ColorCode = "#F5A61A",
                            Name = "SE"
                        },
                        new
                        {
                            Id = 3,
                            ColorCode = "#4594D3",
                            Name = "IDNS"
                        });
                });

            modelBuilder.Entity("LOM.API.Models.LearningRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("LearningRoutes");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("LOM.API.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Commentary")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ConversationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Commentary = "Hoi, mag ik een feedback krijgen op mijn leerroute?",
                            ConversationId = 1,
                            DateTime = new DateTime(2025, 5, 25, 13, 14, 24, 868, DateTimeKind.Local).AddTicks(7892),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Commentary = "Ik zou semester 2 van het jaar 2 aanpassen naar iets anders.",
                            ConversationId = 1,
                            DateTime = new DateTime(2025, 5, 25, 13, 14, 24, 868, DateTimeKind.Local).AddTicks(7897),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Commentary = "Hoi, Ik heb het aangepast",
                            ConversationId = 1,
                            DateTime = new DateTime(2025, 5, 25, 13, 14, 24, 868, DateTimeKind.Local).AddTicks(7898),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Commentary = "Leerroute ziet er goed uit!",
                            ConversationId = 1,
                            DateTime = new DateTime(2025, 5, 25, 13, 14, 24, 868, DateTimeKind.Local).AddTicks(7900),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("LOM.API.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("Ec")
                        .HasColumnType("int");

                    b.Property<int>("GraduateProfileId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GraduateProfileId");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "IP.01",
                            Description = "Introduction to Programming",
                            Ec = 30,
                            GraduateProfileId = 3,
                            IsActive = true,
                            Level = 1,
                            Name = "Introduction to Programming",
                            Period = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "WDB.02",
                            Description = "Web Development Basics",
                            Ec = 30,
                            GraduateProfileId = 1,
                            IsActive = true,
                            Level = 2,
                            Name = "Web Development Basics",
                            Period = 2
                        },
                        new
                        {
                            Id = 3,
                            Code = "DSA.03",
                            Description = "Data Structures and Algorithms",
                            Ec = 30,
                            GraduateProfileId = 2,
                            IsActive = true,
                            Level = 3,
                            Name = "Data Structures and Algorithms",
                            Period = 1
                        },
                        new
                        {
                            Id = 4,
                            Code = "DBMS.04",
                            Description = "Database Management Systems",
                            Ec = 30,
                            GraduateProfileId = 3,
                            IsActive = true,
                            Level = 1,
                            Name = "Database Management Systems",
                            Period = 2
                        },
                        new
                        {
                            Id = 5,
                            Code = "IP.05",
                            Description = "Introduction to Programming",
                            Ec = 30,
                            GraduateProfileId = 1,
                            IsActive = true,
                            Level = 2,
                            Name = "Introduction to Programming",
                            Period = 2
                        },
                        new
                        {
                            Id = 6,
                            Code = "WDB.06",
                            Description = "Web Development Basics",
                            Ec = 30,
                            GraduateProfileId = 2,
                            IsActive = true,
                            Level = 3,
                            Name = "Web Development Basics",
                            Period = 1
                        },
                        new
                        {
                            Id = 7,
                            Code = "DSA.07",
                            Description = "Data Structures and Algorithms",
                            Ec = 30,
                            GraduateProfileId = 3,
                            IsActive = true,
                            Level = 1,
                            Name = "Data Structures and Algorithms",
                            Period = 1
                        },
                        new
                        {
                            Id = 8,
                            Code = "DBMS.08",
                            Description = "Database Management Systems",
                            Ec = 30,
                            GraduateProfileId = 1,
                            IsActive = true,
                            Level = 2,
                            Name = "Database Management Systems",
                            Period = 2
                        },
                        new
                        {
                            Id = 9,
                            Code = "IP.09",
                            Description = "Introduction to Programming",
                            Ec = 30,
                            GraduateProfileId = 2,
                            IsActive = true,
                            Level = 3,
                            Name = "Introduction to Programming",
                            Period = 2
                        },
                        new
                        {
                            Id = 10,
                            Code = "WDB.10",
                            Description = "Web Development Basics",
                            Ec = 30,
                            GraduateProfileId = 3,
                            IsActive = true,
                            Level = 1,
                            Name = "Web Development Basics",
                            Period = 1
                        },
                        new
                        {
                            Id = 11,
                            Code = "DSA.11",
                            Description = "Data Structures and Algorithms",
                            Ec = 30,
                            GraduateProfileId = 1,
                            IsActive = true,
                            Level = 2,
                            Name = "Data Structures and Algorithms",
                            Period = 1
                        },
                        new
                        {
                            Id = 12,
                            Code = "DBMS.12",
                            Description = "Database Management Systems",
                            Ec = 30,
                            GraduateProfileId = 2,
                            IsActive = true,
                            Level = 3,
                            Name = "Database Management Systems",
                            Period = 1
                        },
                        new
                        {
                            Id = 13,
                            Code = "DSA.13",
                            Description = "Data Structures and Algorithms",
                            Ec = 30,
                            GraduateProfileId = 3,
                            IsActive = true,
                            Level = 1,
                            Name = "Data Structures and Algorithms",
                            Period = 1
                        },
                        new
                        {
                            Id = 14,
                            Code = "DBMS.14",
                            Description = "Database Management Systems",
                            Ec = 30,
                            GraduateProfileId = 1,
                            IsActive = true,
                            Level = 2,
                            Name = "Database Management Systems",
                            Period = 2
                        },
                        new
                        {
                            Id = 15,
                            Code = "DBMS.15",
                            Description = "Database Management Systems",
                            Ec = 30,
                            GraduateProfileId = 2,
                            IsActive = true,
                            Level = 3,
                            Name = "Database Management Systems",
                            Period = 1
                        },
                        new
                        {
                            Id = 16,
                            Code = "A.01",
                            Description = "Afstuderen",
                            Ec = 30,
                            GraduateProfileId = 2,
                            IsActive = true,
                            Level = 3,
                            Name = "Afstuderen",
                            Period = 2
                        },
                        new
                        {
                            Id = 17,
                            Code = "MDO.01",
                            Description = "Multidisciplinaire Opdracht",
                            Ec = 30,
                            GraduateProfileId = 2,
                            IsActive = true,
                            Level = 3,
                            Name = "Multidisciplinaire Opdracht",
                            Period = 2
                        });
                });

            modelBuilder.Entity("LOM.API.Models.ModuleEVL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ec")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("ModuleEVLs");
                });

            modelBuilder.Entity("LOM.API.Models.ModuleProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.HasIndex("UserId");

                    b.ToTable("ModuleProgresses");
                });

            modelBuilder.Entity("LOM.API.Models.Oer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Base64PDF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Oers");
                });

            modelBuilder.Entity("LOM.API.Models.Requirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("Requirements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModuleId = 1,
                            Type = 0,
                            Value = "50"
                        },
                        new
                        {
                            Id = 2,
                            ModuleId = 2,
                            Type = 2,
                            Value = "9"
                        },
                        new
                        {
                            Id = 3,
                            ModuleId = 3,
                            Type = 1,
                            Value = "120"
                        },
                        new
                        {
                            Id = 4,
                            ModuleId = 4,
                            Type = 2,
                            Value = "2"
                        },
                        new
                        {
                            Id = 5,
                            ModuleId = 5,
                            Type = 0,
                            Value = "50"
                        },
                        new
                        {
                            Id = 6,
                            ModuleId = 5,
                            Type = 2,
                            Value = "3"
                        },
                        new
                        {
                            Id = 7,
                            ModuleId = 16,
                            Type = 2,
                            Value = "17"
                        },
                        new
                        {
                            Id = 8,
                            ModuleId = 16,
                            Type = 0,
                            Value = "60"
                        },
                        new
                        {
                            Id = 9,
                            ModuleId = 16,
                            Type = 4,
                            Value = "2"
                        });
                });

            modelBuilder.Entity("LOM.API.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Teacher"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Student"
                        });
                });

            modelBuilder.Entity("LOM.API.Models.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LearningRouteId")
                        .HasColumnType("int");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int");

                    b.Property<byte>("Period")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LearningRouteId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LearningRouteId = 1,
                            ModuleId = 1,
                            Period = (byte)1,
                            Year = 1
                        },
                        new
                        {
                            Id = 2,
                            LearningRouteId = 1,
                            ModuleId = 2,
                            Period = (byte)2,
                            Year = 1
                        },
                        new
                        {
                            Id = 3,
                            LearningRouteId = 1,
                            ModuleId = 3,
                            Period = (byte)1,
                            Year = 2
                        },
                        new
                        {
                            Id = 4,
                            LearningRouteId = 1,
                            ModuleId = 4,
                            Period = (byte)2,
                            Year = 2
                        },
                        new
                        {
                            Id = 5,
                            LearningRouteId = 1,
                            ModuleId = 5,
                            Period = (byte)1,
                            Year = 3
                        },
                        new
                        {
                            Id = 6,
                            LearningRouteId = 1,
                            ModuleId = 6,
                            Period = (byte)2,
                            Year = 3
                        },
                        new
                        {
                            Id = 7,
                            LearningRouteId = 1,
                            ModuleId = 7,
                            Period = (byte)1,
                            Year = 4
                        },
                        new
                        {
                            Id = 8,
                            LearningRouteId = 1,
                            ModuleId = 8,
                            Period = (byte)2,
                            Year = 4
                        });
                });

            modelBuilder.Entity("LOM.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ExternalID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("LearningRouteId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("StartYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LearningRouteId");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExternalID = "TEST123",
                            FirstName = "Jhon",
                            LastName = "Doe",
                            LearningRouteId = 1,
                            RoleId = 2,
                            StartYear = 2023
                        },
                        new
                        {
                            Id = 2,
                            ExternalID = "TEST345",
                            FirstName = "Robin",
                            LastName = "Hood",
                            RoleId = 2,
                            StartYear = 0
                        },
                        new
                        {
                            Id = 3,
                            ExternalID = "Test54321",
                            FirstName = "Begeleider",
                            LastName = "Begeleider",
                            RoleId = 1,
                            StartYear = 0
                        });
                });

            modelBuilder.Entity("LOM.API.Models.CompletedEvl", b =>
                {
                    b.HasOne("LOM.API.Models.ModuleEVL", "ModuleEvl")
                        .WithMany()
                        .HasForeignKey("ModuleEvlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LOM.API.Models.ModuleProgress", "ModuleProgress")
                        .WithMany("CompletedEVLs")
                        .HasForeignKey("ModuleProgressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleEvl");

                    b.Navigation("ModuleProgress");
                });

            modelBuilder.Entity("LOM.API.Models.Conversation", b =>
                {
                    b.HasOne("LOM.API.Models.LearningRoute", "LearningRoute")
                        .WithMany()
                        .HasForeignKey("LearningRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LOM.API.Models.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LOM.API.Models.User", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LearningRoute");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("LOM.API.Models.Message", b =>
                {
                    b.HasOne("LOM.API.Models.Conversation", "Conversation")
                        .WithMany()
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LOM.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LOM.API.Models.Module", b =>
                {
                    b.HasOne("LOM.API.Models.GraduateProfile", "GraduateProfile")
                        .WithMany()
                        .HasForeignKey("GraduateProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GraduateProfile");
                });

            modelBuilder.Entity("LOM.API.Models.ModuleEVL", b =>
                {
                    b.HasOne("LOM.API.Models.Module", "Module")
                        .WithMany("Evls")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("LOM.API.Models.ModuleProgress", b =>
                {
                    b.HasOne("LOM.API.Models.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LOM.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LOM.API.Models.Requirement", b =>
                {
                    b.HasOne("LOM.API.Models.Module", "Module")
                        .WithMany("Requirements")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("LOM.API.Models.Semester", b =>
                {
                    b.HasOne("LOM.API.Models.LearningRoute", "LearningRoute")
                        .WithMany("Semesters")
                        .HasForeignKey("LearningRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LOM.API.Models.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("LearningRoute");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("LOM.API.Models.User", b =>
                {
                    b.HasOne("LOM.API.Models.LearningRoute", "LearningRoute")
                        .WithMany("Users")
                        .HasForeignKey("LearningRouteId");

                    b.HasOne("LOM.API.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LearningRoute");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("LOM.API.Models.LearningRoute", b =>
                {
                    b.Navigation("Semesters");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LOM.API.Models.Module", b =>
                {
                    b.Navigation("Evls");

                    b.Navigation("Requirements");
                });

            modelBuilder.Entity("LOM.API.Models.ModuleProgress", b =>
                {
                    b.Navigation("CompletedEVLs");
                });
#pragma warning restore 612, 618
        }
    }
}
