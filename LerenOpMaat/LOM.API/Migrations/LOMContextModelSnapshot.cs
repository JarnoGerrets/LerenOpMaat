// <auto-generated />
using System;
using LOM.API.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LOM.API.Migrations
{
    [DbContext(typeof(LOMContext))]
    partial class LOMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LOM.API.Models.Cohort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Cohorts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            StartDate = new DateTime(2025, 5, 1, 10, 47, 31, 737, DateTimeKind.Local).AddTicks(7116)
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            StartDate = new DateTime(2026, 5, 1, 10, 47, 31, 737, DateTimeKind.Local).AddTicks(7173)
                        },
                        new
                        {
                            Id = 3,
                            IsActive = false,
                            StartDate = new DateTime(2027, 5, 1, 10, 47, 31, 737, DateTimeKind.Local).AddTicks(7177)
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            StartDate = new DateTime(2024, 5, 1, 10, 47, 31, 737, DateTimeKind.Local).AddTicks(7180)
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            StartDate = new DateTime(2023, 5, 1, 10, 47, 31, 737, DateTimeKind.Local).AddTicks(7182)
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            StartDate = new DateTime(2022, 5, 1, 10, 47, 31, 737, DateTimeKind.Local).AddTicks(7184)
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            StartDate = new DateTime(2021, 5, 1, 10, 47, 31, 737, DateTimeKind.Local).AddTicks(7186)
                        });
                });

            modelBuilder.Entity("LOM.API.Models.LearningRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("LearningRoutes");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("LOM.API.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Ec")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Niveau")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "SE",
                            Code = "TMP.01.DT",
                            Description = "Introduction to Programming",
                            Ec = 30,
                            Name = "Introduction to Programming",
                            Niveau = 2
                        },
                        new
                        {
                            Id = 2,
                            Category = "BIM",
                            Code = "TMP.01.DT",
                            Description = "Web Development Basics",
                            Ec = 30,
                            Name = "Web Development Basics",
                            Niveau = 2
                        },
                        new
                        {
                            Id = 3,
                            Category = "IDNS",
                            Code = "TMP.01.DT",
                            Description = "Data Structures and Algorithms",
                            Ec = 30,
                            Name = "Data Structures and Algorithms",
                            Niveau = 2
                        },
                        new
                        {
                            Id = 4,
                            Category = "SE",
                            Code = "TMP.01.DT",
                            Description = "Database Management Systems",
                            Ec = 30,
                            Name = "Database Management Systems",
                            Niveau = 2
                        },
                        new
                        {
                            Id = 5,
                            Category = "BIM",
                            Code = "TMP.01.DT",
                            Description = "Introduction to Programming",
                            Ec = 30,
                            Name = "Introduction to Programming",
                            Niveau = 2
                        },
                        new
                        {
                            Id = 6,
                            Category = "IDNS",
                            Code = "TMP.01.DT",
                            Description = "Web Development Basics",
                            Ec = 30,
                            Name = "Web Development Basics",
                            Niveau = 2
                        },
                        new
                        {
                            Id = 7,
                            Category = "SE",
                            Code = "TMP.01.DT",
                            Description = "Data Structures and Algorithms",
                            Ec = 30,
                            Name = "Data Structures and Algorithms",
                            Niveau = 2
                        },
                        new
                        {
                            Id = 8,
                            Category = "BIM",
                            Code = "TMP.01.DT",
                            Description = "Database Management Systems",
                            Ec = 30,
                            Name = "Database Management Systems",
                            Niveau = 2
                        },
                        new
                        {
                            Id = 9,
                            Category = "IDNS",
                            Code = "TMP.01.DT",
                            Description = "Introduction to Programming",
                            Ec = 30,
                            Name = "Introduction to Programming",
                            Niveau = 2
                        },
                        new
                        {
                            Id = 10,
                            Category = "SE",
                            Code = "TMP.01.DT",
                            Description = "Web Development Basics",
                            Ec = 30,
                            Name = "Web Development Basics",
                            Niveau = 2
                        },
                        new
                        {
                            Id = 11,
                            Category = "BIM",
                            Code = "TMP.01.DT",
                            Description = "Data Structures and Algorithms",
                            Ec = 30,
                            Name = "Data Structures and Algorithms",
                            Niveau = 2
                        },
                        new
                        {
                            Id = 12,
                            Category = "IDNS",
                            Code = "TMP.01.DT",
                            Description = "Database Management Systems",
                            Ec = 30,
                            Name = "Database Management Systems",
                            Niveau = 2
                        },
                        new
                        {
                            Id = 13,
                            Category = "SE",
                            Code = "TMP.01.DT",
                            Description = "Data Structures and Algorithms",
                            Ec = 30,
                            Name = "Data Structures and Algorithms",
                            Niveau = 2
                        },
                        new
                        {
                            Id = 14,
                            Category = "BIM",
                            Code = "TMP.01.DT",
                            Description = "Database Management Systems",
                            Ec = 30,
                            Name = "Database Management Systems",
                            Niveau = 2
                        },
                        new
                        {
                            Id = 15,
                            Category = "IDNS",
                            Code = "TMP.01.DT",
                            Description = "Database Management Systems",
                            Ec = 30,
                            Name = "Database Management Systems",
                            Niveau = 2
                        });
                });

            modelBuilder.Entity("LOM.API.Models.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LearningRouteId")
                        .HasColumnType("int");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int");

                    b.Property<byte>("SemesterNumber")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LearningRouteId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LearningRouteId = 1,
                            ModuleId = 1,
                            SemesterNumber = (byte)1,
                            Year = 1
                        },
                        new
                        {
                            Id = 2,
                            LearningRouteId = 1,
                            ModuleId = 2,
                            SemesterNumber = (byte)2,
                            Year = 1
                        },
                        new
                        {
                            Id = 3,
                            LearningRouteId = 1,
                            ModuleId = 3,
                            SemesterNumber = (byte)1,
                            Year = 2
                        },
                        new
                        {
                            Id = 4,
                            LearningRouteId = 1,
                            ModuleId = 4,
                            SemesterNumber = (byte)2,
                            Year = 2
                        },
                        new
                        {
                            Id = 5,
                            LearningRouteId = 1,
                            ModuleId = 5,
                            SemesterNumber = (byte)1,
                            Year = 3
                        },
                        new
                        {
                            Id = 6,
                            LearningRouteId = 1,
                            ModuleId = 6,
                            SemesterNumber = (byte)2,
                            Year = 3
                        },
                        new
                        {
                            Id = 7,
                            LearningRouteId = 1,
                            ModuleId = 7,
                            SemesterNumber = (byte)1,
                            Year = 4
                        },
                        new
                        {
                            Id = 8,
                            LearningRouteId = 1,
                            ModuleId = 8,
                            SemesterNumber = (byte)2,
                            Year = 4
                        });
                });

            modelBuilder.Entity("LOM.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("LearningRouteId")
                        .HasColumnType("int");

                    b.Property<int>("StartYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LearningRouteId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Jhon",
                            LastName = "Doe",
                            LearningRouteId = 1,
                            StartYear = 2023
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Robin",
                            LastName = "Hood",
                            StartYear = 0
                        });
                });

            modelBuilder.Entity("LOM.API.Models.Semester", b =>
                {
                    b.HasOne("LOM.API.Models.LearningRoute", "LearningRoute")
                        .WithMany("Semesters")
                        .HasForeignKey("LearningRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LOM.API.Models.Module", "Module")
                        .WithMany("Semesters")
                        .HasForeignKey("ModuleId");

                    b.Navigation("LearningRoute");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("LOM.API.Models.User", b =>
                {
                    b.HasOne("LOM.API.Models.LearningRoute", "LearningRoute")
                        .WithMany("Users")
                        .HasForeignKey("LearningRouteId");

                    b.Navigation("LearningRoute");
                });

            modelBuilder.Entity("LOM.API.Models.LearningRoute", b =>
                {
                    b.Navigation("Semesters");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LOM.API.Models.Module", b =>
                {
                    b.Navigation("Semesters");
                });
#pragma warning restore 612, 618
        }
    }
}
